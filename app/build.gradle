plugins {
    id 'com.android.application'
}

def keystorePropertiesFile = file("keystore/signing.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.decryptor.encryptor'
    compileSdk 35

    defaultConfig {
        applicationId 'com.decryptor.encryptor'
        minSdk 26
        targetSdk 35
        versionCode 23
        versionName '3.2'

        vectorDrawables {
            useSupportLibrary true
        }

    }

    signingConfigs {
        release {
            if (keystoreProperties['STORE_FILE']) {
    storeFile file(keystoreProperties['STORE_FILE'])
    storePassword keystoreProperties['STORE_PASSWORD']
    keyAlias keystoreProperties['KEY_ALIAS']
    keyPassword keystoreProperties['KEY_PASSWORD']
}
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.14.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.biometric:biometric:1.2.0-alpha04"
    implementation(name: 'flexbox-3.0.0', ext: 'aar')
}